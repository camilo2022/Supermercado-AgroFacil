/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dise√±os;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import supermercado.agrofacil.Archivo;
import supermercado.agrofacil.Conexion;

/**
 *
 * @author USUARIO
 */
public class Proveedor extends javax.swing.JInternalFrame {
private DefaultTableModel model;
    /**
     * Creates new form Proveedor
     */
    public Proveedor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        telefono_proveedor = new javax.swing.JTextField();
        nombre_proveedor = new javax.swing.JTextField();
        nit_proveedor = new javax.swing.JTextField();
        direccion_proveedor = new javax.swing.JTextField();
        correo_proveedor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        agregar = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        mostrar = new javax.swing.JButton();
        exportar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_proveedor = new javax.swing.JTable();
        excel_empleado = new javax.swing.JCheckBox();
        pdf_empleado = new javax.swing.JCheckBox();

        jButton1.setText("jButton1");

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Proveedor");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 830, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Nit Proveedor");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 40, 110, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Nombre");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(440, 40, 110, 30);
        getContentPane().add(telefono_proveedor);
        telefono_proveedor.setBounds(130, 90, 230, 30);
        getContentPane().add(nombre_proveedor);
        nombre_proveedor.setBounds(550, 40, 230, 30);
        getContentPane().add(nit_proveedor);
        nit_proveedor.setBounds(130, 40, 230, 30);
        getContentPane().add(direccion_proveedor);
        direccion_proveedor.setBounds(130, 140, 230, 30);
        getContentPane().add(correo_proveedor);
        correo_proveedor.setBounds(550, 90, 230, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Telefono");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 90, 110, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Direccion");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 140, 110, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Correo");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(440, 90, 110, 30);

        agregar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        agregar.setText("Agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });
        getContentPane().add(agregar);
        agregar.setBounds(20, 200, 130, 30);

        buscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        getContentPane().add(buscar);
        buscar.setBounds(230, 200, 130, 30);

        modificar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        modificar.setText("Modificar");
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });
        getContentPane().add(modificar);
        modificar.setBounds(440, 200, 130, 30);

        mostrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mostrar.setText("Mostrar");
        mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarActionPerformed(evt);
            }
        });
        getContentPane().add(mostrar);
        mostrar.setBounds(650, 200, 130, 30);

        exportar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        exportar.setText("Exportar");
        exportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportarActionPerformed(evt);
            }
        });
        getContentPane().add(exportar);
        exportar.setBounds(540, 260, 130, 30);

        tabla_proveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla_proveedor);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 320, 760, 170);

        excel_empleado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        excel_empleado.setText("Excel");
        getContentPane().add(excel_empleado);
        excel_empleado.setBounds(330, 260, 130, 30);

        pdf_empleado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pdf_empleado.setText("Pdf");
        getContentPane().add(pdf_empleado);
        pdf_empleado.setBounds(120, 260, 130, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed

        
    try {
        Conexion con = new Conexion();
        con.ConexionPostgres();
        String query ="insert into proveedor values("+ Long.parseLong(nit_proveedor.getText().trim())+ ",'" + nombre_proveedor.getText().trim() + "','" + correo_proveedor.getText().trim() + "',"+ Long.parseLong(telefono_proveedor.getText().trim())+ ",'"+ direccion_proveedor.getText().trim() +"')";
        JOptionPane.showMessageDialog(this, "Registro exitoso");
        con.actualizar(query);
        
        con.cerrar();
        nit_proveedor.setText(null);
        nombre_proveedor.setText(null);
        direccion_proveedor.setText(null);
        correo_proveedor.setText(null);
        telefono_proveedor.setText(null);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
    }
        

    }//GEN-LAST:event_agregarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed

    try {
        Conexion con = new Conexion();
        con.ConexionPostgres();
        
        String query ="select * from proveedor where nit_proveedor = "+ Integer.parseInt(nit_proveedor.getText().trim());
        
        ResultSet rs = con.consultar(query);
        
        if(rs.next()){
            nombre_proveedor.setText(rs.getString("nombre_proveedor"));
            correo_proveedor.setText(rs.getString("correo_proveedor"));
            telefono_proveedor.setText(rs.getString("telefono_proveedor"));
            direccion_proveedor.setText(rs.getString("direccion_proveedor"));
        }
        else{
            JOptionPane.showMessageDialog(this, "No existe la Familia");
        }
        con.cerrar();
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
    }
       
    }//GEN-LAST:event_buscarActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed

    try {
        Conexion con = new Conexion();
        con.ConexionPostgres();
        
        String query ="update proveedor set nombre_proveedor = '"+nombre_proveedor.getText().trim()+"', correo_proveedor='"+correo_proveedor.getText().trim()+ "', telefono_proveedor="+ Long.parseLong(telefono_proveedor.getText().trim())+ ", direccion_proveedor = '"+ direccion_proveedor.getText().trim() +"' where nit_proveedor="+Long.parseLong(nit_proveedor.getText().trim());
        JOptionPane.showMessageDialog(this, "Datos Actualizados");
        con.actualizar(query);
        
        con.cerrar();
        nit_proveedor.setText(null);
        correo_proveedor.setText(null);
        telefono_proveedor.setText(null);
        direccion_proveedor.setText(null);
        nombre_proveedor.setText(null);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
    }
        

    }//GEN-LAST:event_modificarActionPerformed

    private void mostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarActionPerformed

       
    try {
        int con=0;
        
        Conexion con1 = new Conexion();
        con1.ConexionPostgres();
        String query ="select * from proveedor order by nit_proveedor";
        
        java.sql.ResultSet rs =con1.consultar(query);
        
        String data3[][]={};
        String col[]= {"Nit" , "Nombre" , "Correo" , "Telefono" , "Direccion"};
        model = new DefaultTableModel(data3,col);
        tabla_proveedor.setModel(model);
        
        while(rs.next())
        {
            model.insertRow(con,new Object[]{});
            model.setValueAt(rs.getLong("nit_proveedor"), con, 0);
            model.setValueAt(rs.getString("nombre_proveedor"), con, 1);
            model.setValueAt(rs.getString("correo_proveedor"), con, 2);
            model.setValueAt(rs.getLong("telefono_proveedor"), con, 3);
            model.setValueAt(rs.getString("direccion_proveedor"), con, 4);
            con++;
        }
        
        con1.cerrar();
        con1.ConexionPostgres();
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_mostrarActionPerformed

    private void exportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportarActionPerformed


            if(excel_empleado.isSelected()){
                try {
                    String cad="Id \t Nit \t Nombre \t Correo \t Telefono \t Direccion \n";
                    
                    Conexion con1 = new Conexion();
                    con1.ConexionPostgres();
                    String query ="select * from proveedor order by nit_proveedor";
                    
                    java.sql.ResultSet rs =con1.consultar(query);
                    
                    while(rs.next())
                    {
                        cad+= rs.getLong("nit_proveedor") + "\t" + rs.getString("nombre_proveedor") + "\t" + rs.getString("correo_proveedor") + "\t" + rs.getLong("telefono_proveedor") + "\t" + rs.getString("direccion_proveedor") +"\n" ;
                    }
                    
                    con1.cerrar();
                    con1.ConexionPostgres();
                    Archivo.grabar("Proveedor.xls", cad);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(Proveedor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        
    }//GEN-LAST:event_exportarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JButton buscar;
    private javax.swing.JTextField correo_proveedor;
    private javax.swing.JTextField direccion_proveedor;
    private javax.swing.JCheckBox excel_empleado;
    private javax.swing.JButton exportar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificar;
    private javax.swing.JButton mostrar;
    private javax.swing.JTextField nit_proveedor;
    private javax.swing.JTextField nombre_proveedor;
    private javax.swing.JCheckBox pdf_empleado;
    private javax.swing.JTable tabla_proveedor;
    private javax.swing.JTextField telefono_proveedor;
    // End of variables declaration//GEN-END:variables
}
