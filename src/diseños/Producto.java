/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dise√±os;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import supermercado.agrofacil.Archivo;
import supermercado.agrofacil.Conexion;

/**
 *
 * @author SENA
 */
public class Producto extends javax.swing.JFrame {
private DefaultTableModel model;
    /**
     * Creates new form Producto
     */
    public Producto() {
        
            
                initComponents();
                try {
                    Conexion con = new Conexion();
                    con.ConexionPostgres();
                    String query ="select * from familia order by id_familia";
                    
                    
                    ResultSet rs=con.consultar(query);
                    
                    while(rs.next())
                    {
                        id_familia.addItem(rs.getLong("id_familia") + "-" + rs.getString("nombre_familia"));
                        //area_d.addItem(rs.getString("nombre_area"));
                    }
                    
                    con.cerrar();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                try {
                Conexion con = new Conexion();
                con.ConexionPostgres();
                String query ="select * from proveedor order by nit_proveedor";
                ResultSet rs=con.consultar(query);
                while(rs.next())
                {
                    nit_proveedor.addItem(rs.getLong("nit_proveedor") + "-" + rs.getString("nombre_proveedor"));
                    //area_d.addItem(rs.getString("nombre_area"));
                }
                con.cerrar();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        agregar = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        mostrar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        id_producto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nombre_producto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        descripcion_producto = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        id_familia = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        nit_proveedor = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        stockminimo_producto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        existencia_producto = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        valor_producto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_producto = new javax.swing.JTable();
        excel_producto = new javax.swing.JCheckBox();
        pdf_producto = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        agregar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        agregar.setText("Agregar");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });
        getContentPane().add(agregar);
        agregar.setBounds(470, 60, 100, 30);

        buscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        getContentPane().add(buscar);
        buscar.setBounds(650, 60, 100, 30);

        modificar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        modificar.setText("Modificar");
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });
        getContentPane().add(modificar);
        modificar.setBounds(500, 120, 100, 30);

        mostrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mostrar.setText("Mostrar");
        mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarActionPerformed(evt);
            }
        });
        getContentPane().add(mostrar);
        mostrar.setBounds(490, 180, 100, 30);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Exportar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(570, 270, 100, 30);
        getContentPane().add(id_producto);
        id_producto.setBounds(140, 40, 170, 30);

        jLabel1.setText("Id Producto");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 50, 90, 14);

        jLabel2.setText("Nombre_Producto");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 90, 100, 30);
        getContentPane().add(nombre_producto);
        nombre_producto.setBounds(140, 90, 170, 30);

        jLabel3.setText("Descripcion_Producto");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 140, 110, 20);
        getContentPane().add(descripcion_producto);
        descripcion_producto.setBounds(140, 140, 170, 30);

        jLabel4.setText("Id_Familia");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 190, 70, 20);

        id_familia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        getContentPane().add(id_familia);
        id_familia.setBounds(140, 190, 330, 30);

        jLabel5.setText("Nit_Proveedor");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 240, 80, 20);

        nit_proveedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione" }));
        getContentPane().add(nit_proveedor);
        nit_proveedor.setBounds(140, 240, 330, 30);

        jLabel6.setText("Stockminimo_Producto");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 280, 110, 30);

        stockminimo_producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockminimo_productoActionPerformed(evt);
            }
        });
        getContentPane().add(stockminimo_producto);
        stockminimo_producto.setBounds(140, 290, 160, 30);

        jLabel7.setText("Existencia_Producto");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(20, 330, 110, 30);
        getContentPane().add(existencia_producto);
        existencia_producto.setBounds(130, 330, 150, 30);

        jLabel8.setText("Valor_Producto");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(20, 390, 90, 20);
        getContentPane().add(valor_producto);
        valor_producto.setBounds(130, 380, 140, 30);

        tabla_producto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla_producto);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 450, 760, 290);

        excel_producto.setText("excel");
        excel_producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excel_productoActionPerformed(evt);
            }
        });
        getContentPane().add(excel_producto);
        excel_producto.setBounds(410, 340, 51, 23);

        pdf_producto.setText("pdf");
        getContentPane().add(pdf_producto);
        pdf_producto.setBounds(610, 350, 41, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stockminimo_productoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockminimo_productoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stockminimo_productoActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        try {
            
            String item1 = (String) id_familia.getSelectedItem();
            java.util.StringTokenizer st = new java.util.StringTokenizer(item1, "-");
            String id_f= st.nextToken(); 
            
            String item2 = (String) nit_proveedor.getSelectedItem();
            java.util.StringTokenizer st1 = new java.util.StringTokenizer(item2, "-");
            String nit_p= st1.nextToken(); 
            
            Conexion con = new Conexion();
            con.ConexionPostgres();
            String query ="insert into producto values("+Long.parseLong(id_producto.getText().trim())+",'"+nombre_producto.getText().trim()+"','"+descripcion_producto.getText().trim()+"',"+ Long.parseLong(id_f) +","+ Long.parseLong(nit_p) +","+Long.parseLong(stockminimo_producto.getText().trim())+","+ Long.parseLong(existencia_producto.getText().trim()) +","+ Double.parseDouble(valor_producto.getText().trim()) +")";
            JOptionPane.showMessageDialog(this, "Registro exitoso");
            con.actualizar(query);

            con.cerrar();
            nombre_producto.setText(null);
            id_familia.setSelectedItem("Seleccione");
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_agregarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        try {
            Conexion con = new Conexion();
            con.ConexionPostgres();

            String query ="select * from producto where id_producto = "+ Long.parseLong(id_producto.getText().trim());

            ResultSet rs = con.consultar(query);

            if(rs.next()){
                nombre_producto.setText(rs.getString("nombre_producto"));
                descripcion_producto.setText(rs.getString("descripcion_producto"));
                stockminimo_producto.setText(rs.getString("stockminimo_producto"));
                existencia_producto.setText(rs.getString("existencia_producto"));
                valor_producto.setText(rs.getString("valor_producto"));
                
                
            }
            else{
                JOptionPane.showMessageDialog(this, "No existe el Producto");
            }
            con.cerrar();    
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buscarActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        try {
            
            String item1 = (String) id_familia.getSelectedItem();
            java.util.StringTokenizer st = new java.util.StringTokenizer(item1, "-");
            String id_f= st.nextToken(); 
            
            String item2 = (String) nit_proveedor.getSelectedItem();
            java.util.StringTokenizer st1 = new java.util.StringTokenizer(item2, "-");
            String nit_p= st1.nextToken();
            
            Conexion con = new Conexion();
            con.ConexionPostgres();

            String query ="update producto set nombre_producto = '"+ nombre_producto.getText().trim()+"', descripcion_producto='"+descripcion_producto.getText().trim()+"', id_familia="+ Long.parseLong(id_f) +", nit_proveedor="+ Long.parseLong(nit_p) +", stockminimo_producto="+Long.parseLong(stockminimo_producto.getText().trim())+",existencia_producto="+Long.parseLong(existencia_producto.getText().trim())+", valor_producto="+Long.parseLong(valor_producto.getText().trim())+" where id_producto="+Long.parseLong(id_producto.getText().trim());
            JOptionPane.showMessageDialog(this, "Datos Actualizados");
            con.actualizar(query);

            con.cerrar();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_modificarActionPerformed

    private void mostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarActionPerformed
    try {
        int con=0;
        
        Conexion con1 = new Conexion();
        con1.ConexionPostgres();
        String query ="select * from producto order by id_producto";
        
        java.sql.ResultSet rs =con1.consultar(query);
        
        String data3[][]={};
        String col[]= {"Id" , "Nombre" , "Descripcion" , "Familia" , "Proveedor" , "StockMinimo" , "Existencia" , "Valor"};
        model = new DefaultTableModel(data3,col);
        tabla_producto.setModel(model);
        
        while(rs.next())
        {
            model.insertRow(con,new Object[]{});
            model.setValueAt(rs.getLong("id_producto"), con, 0);
            model.setValueAt(rs.getString("nombre_producto"), con, 1);
            model.setValueAt(rs.getString("descripcion_producto"), con, 2);
            model.setValueAt(rs.getLong("id_familia"), con, 3);
            model.setValueAt(rs.getLong("nit_proveedor"), con, 4);
            model.setValueAt(rs.getLong("stockminimo_producto"), con, 5);
            model.setValueAt(rs.getLong("existencia_producto"), con, 6);
            model.setValueAt(rs.getDouble("valor_producto"), con, 7);
            con++;
        }
        
        con1.cerrar();
        con1.ConexionPostgres();
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
    } catch (SQLException ex) {
        Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_mostrarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    if(excel_producto.isSelected()){
                
        try {
            String cad="Id \t Nombre \t Descripcion \t Familia \t Proveedor \t StockMinimo \t Existencia \t Valor \n";
            
            Conexion con1 = new Conexion();
            con1.ConexionPostgres();
            String query ="select * from producto order by id_producto";
            
            java.sql.ResultSet rs =con1.consultar(query);
            
            while(rs.next())
            {
                cad+= rs.getLong("id_producto") + "\t" + rs.getString("nombre_producto") + "\t" + rs.getString("descripcion_producto") + "\t" + rs.getLong("id_familia")+ "\t" + rs.getLong("nit_proveedor") + "\t" + rs.getLong("stockminimo_producto")+ "\t" + rs.getLong("existencia_producto")+ "\t" + rs.getDouble("valor_producto") + "\n" ;
            }
            
            con1.cerrar();
            con1.ConexionPostgres();
            Archivo.grabar("Producto.xls", cad);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Producto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void excel_productoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excel_productoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_excel_productoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Producto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Producto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Producto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Producto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Producto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JButton buscar;
    private javax.swing.JTextField descripcion_producto;
    private javax.swing.JCheckBox excel_producto;
    private javax.swing.JTextField existencia_producto;
    private javax.swing.JComboBox<String> id_familia;
    private javax.swing.JTextField id_producto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificar;
    private javax.swing.JButton mostrar;
    private javax.swing.JComboBox<String> nit_proveedor;
    private javax.swing.JTextField nombre_producto;
    private javax.swing.JCheckBox pdf_producto;
    private javax.swing.JTextField stockminimo_producto;
    private javax.swing.JTable tabla_producto;
    private javax.swing.JTextField valor_producto;
    // End of variables declaration//GEN-END:variables
}
